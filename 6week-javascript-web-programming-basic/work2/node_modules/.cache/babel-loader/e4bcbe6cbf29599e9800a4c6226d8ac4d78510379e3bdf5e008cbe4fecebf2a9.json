{"ast":null,"code":"var _jsxFileName = \"/Users/kimjunhyung/Desktop/javascript_basic/6week-javascript-web-programming-basic/src/index.js\";\nimport { Fragment } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst product = 'MacBook';\nconst model = 'Air';\nconst item = product + model;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n/*#__PURE__*/\n// <h1>나만의 {product.toUpperCase} 주문하기 </h1>\n// <h1>나만의 {product + model} 주문하기 </h1>\n_jsxDEV(\"h1\", {\n  children: [\"\\uB098\\uB9CC\\uC758 \", item, \" \\uC8FC\\uBB38\\uD558\\uAE30 \"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this));\n//ReactDOM 의 render은 index.js에서 주로 한번만 실행되기때문에 외울핋요는 없고 알아만두자\n//ReactDOM.render은 첫번쨰 아규먼트로 html요소를 만들고, 두번쨰 아규먼트값에 그 요소를 넣어주는 역할을 한다.\n// ReactDOM.render(<h1>안녕 리액트!</h1>, document.getElementById('root'));\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n// <h1>안녕 리액트!</h1>,\n// <p>안녕 리액트!</p>,\n// <div>안녕 리액트!</div>,\n// <p id=\"ptagId\">안녕 리액트!</p>,\n// <p className=\"ptagClassName\">안녕 리액트!</p>,\n// <form>\n//     <label htmlFor=\"name\">이름</label>\n//     <input id=\"name\" type=\"text\" onBlur=\"\" onFocus=\"\" onMouseDown=\"\" />\n// </form>,\n\n//한번에 어려개 두려면 div로 묶거나 div스기싫으면 fragment태그를 쓰자.\n// <div>\n//     <p>안녕</p>\n//     <p>리액트</p>\n// </div>,\n// <Fragment>\n//     <p>안녕</p>\n//     <p>리액트</p>\n// </Fragment>,\n//아래와같이 아무것도 없는 태그로 감싸주는것도 하나의 방법\n// <>\n// </>    \n// );","map":{"version":3,"names":["Fragment","ReactDOM","jsxDEV","_jsxDEV","product","model","item","root","createRoot","document","getElementById","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/kimjunhyung/Desktop/javascript_basic/6week-javascript-web-programming-basic/src/index.js"],"sourcesContent":["import { Fragment } from 'react';\nimport ReactDOM from 'react-dom/client';\n\nconst product = 'MacBook';\nconst model = 'Air';\nconst item = product + model;\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    // <h1>나만의 {product.toUpperCase} 주문하기 </h1>\n    // <h1>나만의 {product + model} 주문하기 </h1>\n    <h1>나만의 {item} 주문하기 </h1>\n\n);\n//ReactDOM 의 render은 index.js에서 주로 한번만 실행되기때문에 외울핋요는 없고 알아만두자\n//ReactDOM.render은 첫번쨰 아규먼트로 html요소를 만들고, 두번쨰 아규먼트값에 그 요소를 넣어주는 역할을 한다.\n// ReactDOM.render(<h1>안녕 리액트!</h1>, document.getElementById('root'));\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n    // <h1>안녕 리액트!</h1>,\n    // <p>안녕 리액트!</p>,\n    // <div>안녕 리액트!</div>,\n    // <p id=\"ptagId\">안녕 리액트!</p>,\n    // <p className=\"ptagClassName\">안녕 리액트!</p>,\n    // <form>\n    //     <label htmlFor=\"name\">이름</label>\n    //     <input id=\"name\" type=\"text\" onBlur=\"\" onFocus=\"\" onMouseDown=\"\" />\n    // </form>,\n    \n    //한번에 어려개 두려면 div로 묶거나 div스기싫으면 fragment태그를 쓰자.\n    // <div>\n    //     <p>안녕</p>\n    //     <p>리액트</p>\n    // </div>,\n    // <Fragment>\n    //     <p>안녕</p>\n    //     <p>리액트</p>\n    // </Fragment>,\n    //아래와같이 아무것도 없는 태그로 감싸주는것도 하나의 방법\n    // <>\n    // </>    \n// );\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAG,SAAS;AACzB,MAAMC,KAAK,GAAG,KAAK;AACnB,MAAMC,IAAI,GAAGF,OAAO,GAAGC,KAAK;AAE5B,MAAME,IAAI,GAAGN,QAAQ,CAACO,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM;AAAA;AACP;AACA;AACAR,OAAA;EAAAS,QAAA,GAAI,qBAAI,EAACN,IAAI,EAAC,4BAAM;AAAA;EAAAO,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAI,CAE5B,CAAC;AACD;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}