{"ast":null,"code":"var _jsxFileName = \"/Users/kimjunhyung/Desktop/javascript_basic/6week-javascript-web-programming-basic/src/index.js\";\nimport { func } from 'prop-types';\nimport { Fragment } from 'react';\nimport ReactDOM from 'react-dom/client';\n\n//ReactDOM 의 render은 index.js에서 주로 한번만 실행되기때문에 외울핋요는 없고 알아만두자\n//ReactDOM.render은 첫번쨰 아규먼트로 html요소를 만들고, 두번쨰 아규먼트값에 그 요소를 넣어주는 역할을 한다.\n// ReactDOM.render(<h1>안녕 리액트!</h1>, document.getElementById('root'));\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \"\\uC548\\uB155 \\uB9AC\\uC561\\uD2B8!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(\"p\", {\n  children: \"\\uC548\\uB155 \\uB9AC\\uC561\\uD2B8!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(\"div\", {\n  children: \"\\uC548\\uB155 \\uB9AC\\uC561\\uD2B8!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(\"p\", {\n  id: \"ptagId\",\n  children: \"\\uC548\\uB155 \\uB9AC\\uC561\\uD2B8!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(\"p\", {\n  className: \"ptagClassName\",\n  children: \"\\uC548\\uB155 \\uB9AC\\uC561\\uD2B8!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(\"form\", {\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: \"name\",\n    children: \"\\uC774\\uB984\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    onBlur: \"\",\n    onFocus: \"\",\n    onMouseDown: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 5\n}, this),\n/*#__PURE__*/\n// 한번에 어려개 두려면 div로 묶거나 div스기싫으면 fragment태그를 쓰자.\n_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uC548\\uB155\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uB9AC\\uC561\\uD2B8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uC548\\uB155\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uB9AC\\uC561\\uD2B8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 5\n}, this),\n/*#__PURE__*/\n// 아래와같이 아무것도 없는 태그로 감싸주는것도 하나의 방법\n_jsxDEV(_Fragment, {}, void 0, false));","map":{"version":3,"names":["func","Fragment","ReactDOM","jsxDEV","_jsxDEV","_Fragment","root","createRoot","document","getElementById","render","children","fileName","_jsxFileName","lineNumber","columnNumber","id","className","htmlFor","type","onBlur","onFocus","onMouseDown"],"sources":["/Users/kimjunhyung/Desktop/javascript_basic/6week-javascript-web-programming-basic/src/index.js"],"sourcesContent":["import { func } from 'prop-types';\nimport { Fragment } from 'react';\nimport ReactDOM from 'react-dom/client';\n\n\n//ReactDOM 의 render은 index.js에서 주로 한번만 실행되기때문에 외울핋요는 없고 알아만두자\n//ReactDOM.render은 첫번쨰 아규먼트로 html요소를 만들고, 두번쨰 아규먼트값에 그 요소를 넣어주는 역할을 한다.\n// ReactDOM.render(<h1>안녕 리액트!</h1>, document.getElementById('root'));\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <h1>안녕 리액트!</h1>,\n    <p>안녕 리액트!</p>,\n    <div>안녕 리액트!</div>,\n    <p id=\"ptagId\">안녕 리액트!</p>,\n    <p className=\"ptagClassName\">안녕 리액트!</p>,\n    <form>\n        <label htmlFor=\"name\">이름</label>\n        <input id=\"name\" type=\"text\" onBlur=\"\" onFocus=\"\" onMouseDown=\"\" />\n    </form>,\n    \n    // 한번에 어려개 두려면 div로 묶거나 div스기싫으면 fragment태그를 쓰자.\n    <div>\n        <p>안녕</p>\n        <p>리액트</p>\n    </div>,\n    <Fragment>\n        <p>안녕</p>\n        <p>리액트</p>\n    </Fragment>,\n    // 아래와같이 아무것도 없는 태그로 감싸주는것도 하나의 방법\n    <>\n    </>    \n);\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,YAAY;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,kBAAkB;;AAGvC;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAH,QAAA,IAAAI,SAAA;AACA,MAAMC,IAAI,GAAGJ,QAAQ,CAACK,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACPN,OAAA;EAAAO,QAAA,EAAI;AAAO;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAI,CAAC,eAChBX,OAAA;EAAAO,QAAA,EAAG;AAAO;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAG,CAAC,eACdX,OAAA;EAAAO,QAAA,EAAK;AAAO;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAK,CAAC,eAClBX,OAAA;EAAGY,EAAE,EAAC,QAAQ;EAAAL,QAAA,EAAC;AAAO;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAG,CAAC,eAC1BX,OAAA;EAAGa,SAAS,EAAC,eAAe;EAAAN,QAAA,EAAC;AAAO;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAG,CAAC,eACxCX,OAAA;EAAAO,QAAA,gBACIP,OAAA;IAAOc,OAAO,EAAC,MAAM;IAAAP,QAAA,EAAC;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC,eAChCX,OAAA;IAAOY,EAAE,EAAC,MAAM;IAACG,IAAI,EAAC,MAAM;IAACC,MAAM,EAAC,EAAE;IAACC,OAAO,EAAC,EAAE;IAACC,WAAW,EAAC;EAAE;IAAAV,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACjE,CAAC;AAAA;AAEP;AACAX,OAAA;EAAAO,QAAA,gBACIP,OAAA;IAAAO,QAAA,EAAG;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,eACTX,OAAA;IAAAO,QAAA,EAAG;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACT,CAAC,eACNX,OAAA,CAACH,QAAQ;EAAAU,QAAA,gBACLP,OAAA;IAAAO,QAAA,EAAG;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,eACTX,OAAA;IAAAO,QAAA,EAAG;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACJ,CAAC;AAAA;AACX;AACAX,OAAA,CAAAC,SAAA,mBACE,CACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}